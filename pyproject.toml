[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bile-scripture"
version = "0.1.0"
description = "End-to-end toolkit for generating tileable textures and complete PBR map packs"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "alexph10", email = "your-email@example.com"}
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.110,<1.0",
    "uvicorn[standard]>=0.29",
    "pydantic>=2.6",
    "pillow>=10.3",
    "numpy>=1.26",
    "opencv-python-headless>=4.9",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.5",
    "black>=24.4",
    "isort>=5.13",
    "mypy>=1.10",
    "pytest>=8.2",
    "pytest-cov>=5.0",
    "types-Pillow",
]
ml = [
    "scikit-learn>=1.4",
    "scipy>=1.12",
    "matplotlib>=3.8",
    "optuna>=3.6",
    "mlflow>=2.14",
]
dl = [
    "torch>=2.3",
    "torchvision>=0.18",
    "lightning>=2.3",
    "timm>=1.0",
    "albumentations>=1.4",
    "lpips>=0.1.4",
    "onnxruntime>=1.18",
]

[project.urls]
Homepage = "https://github.com/alexph10/bileScripture"
Repository = "https://github.com/alexph10/bileScripture"
Issues = "https://github.com/alexph10/bileScripture/issues"

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101"]

# Black configuration
[tool.black]
target-version = ['py311']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["bile_scripture"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "cv2",
    "mlflow.*",
    "optuna.*",
    "albumentations.*",
    "lpips.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
